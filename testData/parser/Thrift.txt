Thrift File
  PsiComment(BlockComment)('/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements. See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership. The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * "License"); you may not use this file except in compliance\n * with the License. You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n *\n * Contains some contributions under the Thrift Software License.\n * Please see doc/old-thrift-license.txt in the Thrift distribution for\n * details.\n */')
  NAMESPACE
    PsiElement(Identifier)('namespace')
    NAMESPACE_SCOPE
      PsiElement(Identifier)('c_glib')
    PsiElement(Identifier)('TTest')
  NAMESPACE
    PsiElement(Identifier)('namespace')
    NAMESPACE_SCOPE
      PsiElement(Identifier)('java')
    PsiElement(Identifier)('thrift.test')
  NAMESPACE
    PsiElement(Identifier)('namespace')
    NAMESPACE_SCOPE
      PsiElement(Identifier)('cpp')
    PsiElement(Identifier)('thrift.test')
  NAMESPACE
    PsiElement(Identifier)('namespace')
    NAMESPACE_SCOPE
      PsiElement(Identifier)('rb')
    PsiElement(Identifier)('Thrift.Test')
  NAMESPACE
    PsiElement(Identifier)('namespace')
    NAMESPACE_SCOPE
      PsiElement(Identifier)('perl')
    PsiElement(Identifier)('ThriftTest')
  NAMESPACE
    PsiElement(Identifier)('namespace')
    NAMESPACE_SCOPE
      PsiElement(Identifier)('csharp')
    PsiElement(Identifier)('Thrift.Test')
  NAMESPACE
    PsiElement(Identifier)('namespace')
    NAMESPACE_SCOPE
      PsiElement(Identifier)('js')
    PsiElement(Identifier)('ThriftTest')
  NAMESPACE
    PsiElement(Identifier)('namespace')
    NAMESPACE_SCOPE
      PsiElement(Identifier)('st')
    PsiElement(Identifier)('ThriftTest')
  NAMESPACE
    PsiElement(Identifier)('namespace')
    NAMESPACE_SCOPE
      PsiElement(Identifier)('py')
    PsiElement(Identifier)('ThriftTest')
  NAMESPACE
    PsiElement(Identifier)('namespace')
    NAMESPACE_SCOPE
      PsiElement(Identifier)('py.twisted')
    PsiElement(Identifier)('ThriftTest')
  NAMESPACE
    PsiElement(Identifier)('namespace')
    NAMESPACE_SCOPE
      PsiElement(Identifier)('go')
    PsiElement(Identifier)('ThriftTest')
  NAMESPACE
    PsiElement(Identifier)('namespace')
    NAMESPACE_SCOPE
      PsiElement(Identifier)('php')
    PsiElement(Identifier)('ThriftTest')
  NAMESPACE
    PsiElement(Identifier)('namespace')
    NAMESPACE_SCOPE
      PsiElement(Identifier)('delphi')
    PsiElement(Identifier)('Thrift.Test')
  NAMESPACE
    PsiElement(Identifier)('namespace')
    NAMESPACE_SCOPE
      PsiElement(Identifier)('cocoa')
    PsiElement(Identifier)('ThriftTest')
  NAMESPACE
    PsiElement(Identifier)('namespace')
    NAMESPACE_SCOPE
      PsiElement(Identifier)('d')
    PsiElement(Identifier)('ThriftTest')
  NAMESPACE
    PsiElement(Identifier)('namespace')
    NAMESPACE_SCOPE
      PsiElement(Identifier)('netcore')
    PsiElement(Identifier)('ThriftTest')
  NAMESPACE
    PsiElement(Identifier)('namespace')
    NAMESPACE_SCOPE
      PsiElement(Identifier)('lua')
    PsiElement(Identifier)('ThriftTest')
  NAMESPACE
    PsiElement(Identifier)('namespace')
    NAMESPACE_SCOPE
      PsiElement(Identifier)('xsd')
    PsiElement(Identifier)('ThriftTest')
  PsiComment(Comment)('// Presence of namespaces and sub-namespaces for which there is')
  PsiComment(Comment)('// no generator should compile with warnings only')
  NAMESPACE
    PsiElement(Identifier)('namespace')
    PsiErrorElement:<namespace scope>, smalltalk.category or smalltalk.prefix expected, got 'noexist'
      <empty list>
  PsiElement(Identifier)('noexist')
  PsiElement(Identifier)('ThriftTest')
  NAMESPACE
    PsiElement(Identifier)('namespace')
    PsiErrorElement:<namespace scope>, smalltalk.category or smalltalk.prefix expected, got 'cpp.noexist'
      <empty list>
  PsiElement(Identifier)('cpp.noexist')
  PsiElement(Identifier)('ThriftTest')
  NAMESPACE
    PsiElement(Identifier)('namespace')
    NAMESPACE_SCOPE
      PsiElement(Multiply)('*')
    PsiElement(Identifier)('thrift.test')
  PsiComment(BlockComment)('/**\n * Docstring!\n */')
  ENUM
    PsiElement(Identifier)('enum')
    DEFINITION_NAME
      PsiElement(Identifier)('Numberz')
    PsiElement({)('{')
    ENUM_FIELDS
      ENUM_FIELD
        PsiElement(Identifier)('ONE')
        PsiElement(=)('=')
        INT_CONSTANT
          PsiElement(Integer)('1')
        LIST_SEPARATOR
          PsiElement(,)(',')
      ENUM_FIELD
        PsiElement(Identifier)('TWO')
        LIST_SEPARATOR
          PsiElement(,)(',')
      ENUM_FIELD
        PsiElement(Identifier)('THREE')
        LIST_SEPARATOR
          PsiElement(,)(',')
      ENUM_FIELD
        PsiElement(Identifier)('FIVE')
        PsiElement(=)('=')
        INT_CONSTANT
          PsiElement(Integer)('5')
        LIST_SEPARATOR
          PsiElement(,)(',')
      ENUM_FIELD
        PsiElement(Identifier)('SIX')
        LIST_SEPARATOR
          PsiElement(,)(',')
      ENUM_FIELD
        PsiElement(Identifier)('EIGHT')
        PsiElement(=)('=')
        INT_CONSTANT
          PsiElement(Integer)('8')
    PsiElement(})('}')
  CONST
    PsiElement(Identifier)('const')
    FIELD_TYPE
      CUSTOM_TYPE
        PsiElement(Identifier)('Numberz')
    DEFINITION_NAME
      PsiElement(Identifier)('myNumberz')
    PsiElement(=)('=')
    CONST_VALUE
      PsiElement(Identifier)('Numberz.ONE')
    LIST_SEPARATOR
      PsiElement(;)(';')
  PsiComment(Comment)('// the following is expected to fail:')
  PsiComment(Comment)('// const Numberz urNumberz = ONE;')
  TYPEDEF
    PsiElement(Identifier)('typedef')
    FIELD_TYPE
      BASE_TYPE
        SIMPLE_BASE_TYPE
          PsiElement(Identifier)('i64')
    DEFINITION_NAME
      PsiElement(Identifier)('UserId')
  STRUCT
    PsiElement(Identifier)('struct')
    DEFINITION_NAME
      PsiElement(Identifier)('Bonk')
    PsiElement({)('{')
    FIELDS
      FIELD
        FIELD_ID
          INT_CONSTANT
            PsiElement(Integer)('1')
          PsiElement(:)(':')
        FIELD_TYPE
          BASE_TYPE
            SIMPLE_BASE_TYPE
              PsiElement(Identifier)('string')
        DEFINITION_NAME
          PsiElement(Identifier)('message')
        XSD_FIELD_OPTIONS
          <empty list>
        LIST_SEPARATOR
          PsiElement(,)(',')
      FIELD
        FIELD_ID
          INT_CONSTANT
            PsiElement(Integer)('2')
          PsiElement(:)(':')
        FIELD_TYPE
          BASE_TYPE
            SIMPLE_BASE_TYPE
              PsiElement(Identifier)('i32')
        DEFINITION_NAME
          PsiElement(Identifier)('type')
        XSD_FIELD_OPTIONS
          <empty list>
    PsiElement(})('}')
  TYPEDEF
    PsiElement(Identifier)('typedef')
    FIELD_TYPE
      CONTAINER_TYPE
        MAP_TYPE
          PsiElement(Identifier)('map')
          GENERIC_TYPE
            PsiElement(<)('<')
            FIELD_TYPE
              BASE_TYPE
                SIMPLE_BASE_TYPE
                  PsiElement(Identifier)('string')
            PsiElement(,)(',')
            FIELD_TYPE
              CUSTOM_TYPE
                PsiElement(Identifier)('Bonk')
            PsiElement(>)('>')
    DEFINITION_NAME
      PsiElement(Identifier)('MapType')
  STRUCT
    PsiElement(Identifier)('struct')
    DEFINITION_NAME
      PsiElement(Identifier)('Bools')
    PsiElement({)('{')
    FIELDS
      FIELD
        FIELD_ID
          INT_CONSTANT
            PsiElement(Integer)('1')
          PsiElement(:)(':')
        FIELD_TYPE
          BASE_TYPE
            SIMPLE_BASE_TYPE
              PsiElement(Identifier)('bool')
        DEFINITION_NAME
          PsiElement(Identifier)('im_true')
        XSD_FIELD_OPTIONS
          <empty list>
        LIST_SEPARATOR
          PsiElement(,)(',')
      FIELD
        FIELD_ID
          INT_CONSTANT
            PsiElement(Integer)('2')
          PsiElement(:)(':')
        FIELD_TYPE
          BASE_TYPE
            SIMPLE_BASE_TYPE
              PsiElement(Identifier)('bool')
        DEFINITION_NAME
          PsiElement(Identifier)('im_false')
        XSD_FIELD_OPTIONS
          <empty list>
        LIST_SEPARATOR
          PsiElement(,)(',')
    PsiElement(})('}')
  STRUCT
    PsiElement(Identifier)('struct')
    DEFINITION_NAME
      PsiElement(Identifier)('Xtruct')
    PsiElement({)('{')
    FIELDS
      FIELD
        FIELD_ID
          INT_CONSTANT
            PsiElement(Integer)('1')
          PsiElement(:)(':')
        FIELD_TYPE
          BASE_TYPE
            SIMPLE_BASE_TYPE
              PsiElement(Identifier)('string')
        DEFINITION_NAME
          PsiElement(Identifier)('string_thing')
        XSD_FIELD_OPTIONS
          <empty list>
      FIELD
        FIELD_ID
          INT_CONSTANT
            PsiElement(Integer)('4')
          PsiElement(:)(':')
        FIELD_TYPE
          BASE_TYPE
            SIMPLE_BASE_TYPE
              PsiElement(Identifier)('byte')
        DEFINITION_NAME
          PsiElement(Identifier)('byte_thing')
        XSD_FIELD_OPTIONS
          <empty list>
      FIELD
        FIELD_ID
          INT_CONSTANT
            PsiElement(Integer)('9')
          PsiElement(:)(':')
        FIELD_TYPE
          BASE_TYPE
            SIMPLE_BASE_TYPE
              PsiElement(Identifier)('i32')
        DEFINITION_NAME
          PsiElement(Identifier)('i32_thing')
        XSD_FIELD_OPTIONS
          <empty list>
      FIELD
        FIELD_ID
          INT_CONSTANT
            PsiElement(Integer)('11')
          PsiElement(:)(':')
        FIELD_TYPE
          BASE_TYPE
            SIMPLE_BASE_TYPE
              PsiElement(Identifier)('i64')
        DEFINITION_NAME
          PsiElement(Identifier)('i64_thing')
        XSD_FIELD_OPTIONS
          <empty list>
    PsiElement(})('}')
  STRUCT
    PsiElement(Identifier)('struct')
    DEFINITION_NAME
      PsiElement(Identifier)('Xtruct2')
    PsiElement({)('{')
    FIELDS
      FIELD
        FIELD_ID
          INT_CONSTANT
            PsiElement(Integer)('1')
          PsiElement(:)(':')
        FIELD_TYPE
          BASE_TYPE
            SIMPLE_BASE_TYPE
              PsiElement(Identifier)('byte')
        DEFINITION_NAME
          PsiElement(Identifier)('byte_thing')
        XSD_FIELD_OPTIONS
          <empty list>
        LIST_SEPARATOR
          PsiElement(,)(',')
      FIELD
        FIELD_ID
          INT_CONSTANT
            PsiElement(Integer)('2')
          PsiElement(:)(':')
        FIELD_TYPE
          CUSTOM_TYPE
            PsiElement(Identifier)('Xtruct')
        DEFINITION_NAME
          PsiElement(Identifier)('struct_thing')
        XSD_FIELD_OPTIONS
          <empty list>
        LIST_SEPARATOR
          PsiElement(,)(',')
      FIELD
        FIELD_ID
          INT_CONSTANT
            PsiElement(Integer)('3')
          PsiElement(:)(':')
        FIELD_TYPE
          BASE_TYPE
            SIMPLE_BASE_TYPE
              PsiElement(Identifier)('i32')
        DEFINITION_NAME
          PsiElement(Identifier)('i32_thing')
        XSD_FIELD_OPTIONS
          <empty list>
    PsiElement(})('}')
  STRUCT
    PsiElement(Identifier)('struct')
    DEFINITION_NAME
      PsiElement(Identifier)('Xtruct3')
    PsiElement({)('{')
    FIELDS
      FIELD
        FIELD_ID
          INT_CONSTANT
            PsiElement(Integer)('1')
          PsiElement(:)(':')
        FIELD_TYPE
          BASE_TYPE
            SIMPLE_BASE_TYPE
              PsiElement(Identifier)('string')
        DEFINITION_NAME
          PsiElement(Identifier)('string_thing')
        XSD_FIELD_OPTIONS
          <empty list>
        LIST_SEPARATOR
          PsiElement(,)(',')
      FIELD
        FIELD_ID
          INT_CONSTANT
            PsiElement(Integer)('4')
          PsiElement(:)(':')
        FIELD_TYPE
          BASE_TYPE
            SIMPLE_BASE_TYPE
              PsiElement(Identifier)('i32')
        DEFINITION_NAME
          PsiElement(Identifier)('changed')
        XSD_FIELD_OPTIONS
          <empty list>
        LIST_SEPARATOR
          PsiElement(,)(',')
      FIELD
        FIELD_ID
          INT_CONSTANT
            PsiElement(Integer)('9')
          PsiElement(:)(':')
        FIELD_TYPE
          BASE_TYPE
            SIMPLE_BASE_TYPE
              PsiElement(Identifier)('i32')
        DEFINITION_NAME
          PsiElement(Identifier)('i32_thing')
        XSD_FIELD_OPTIONS
          <empty list>
        LIST_SEPARATOR
          PsiElement(,)(',')
      FIELD
        FIELD_ID
          INT_CONSTANT
            PsiElement(Integer)('11')
          PsiElement(:)(':')
        FIELD_TYPE
          BASE_TYPE
            SIMPLE_BASE_TYPE
              PsiElement(Identifier)('i64')
        DEFINITION_NAME
          PsiElement(Identifier)('i64_thing')
        XSD_FIELD_OPTIONS
          <empty list>
    PsiElement(})('}')
  STRUCT
    PsiElement(Identifier)('struct')
    DEFINITION_NAME
      PsiElement(Identifier)('Insanity')
    PsiElement({)('{')
    FIELDS
      FIELD
        FIELD_ID
          INT_CONSTANT
            PsiElement(Integer)('1')
          PsiElement(:)(':')
        FIELD_TYPE
          CONTAINER_TYPE
            MAP_TYPE
              PsiElement(Identifier)('map')
              GENERIC_TYPE
                PsiElement(<)('<')
                FIELD_TYPE
                  CUSTOM_TYPE
                    PsiElement(Identifier)('Numberz')
                PsiElement(,)(',')
                FIELD_TYPE
                  CUSTOM_TYPE
                    PsiElement(Identifier)('UserId')
                PsiElement(>)('>')
        DEFINITION_NAME
          PsiElement(Identifier)('userMap')
        XSD_FIELD_OPTIONS
          <empty list>
        LIST_SEPARATOR
          PsiElement(,)(',')
      FIELD
        FIELD_ID
          INT_CONSTANT
            PsiElement(Integer)('2')
          PsiElement(:)(':')
        FIELD_TYPE
          CONTAINER_TYPE
            LIST_TYPE
              PsiElement(Identifier)('list')
              GENERIC_TYPE
                PsiElement(<)('<')
                FIELD_TYPE
                  CUSTOM_TYPE
                    PsiElement(Identifier)('Xtruct')
                PsiElement(>)('>')
        DEFINITION_NAME
          PsiElement(Identifier)('xtructs')
        XSD_FIELD_OPTIONS
          <empty list>
    PsiElement(})('}')
  STRUCT
    PsiElement(Identifier)('struct')
    DEFINITION_NAME
      PsiElement(Identifier)('CrazyNesting')
    PsiElement({)('{')
    FIELDS
      FIELD
        FIELD_ID
          INT_CONSTANT
            PsiElement(Integer)('1')
          PsiElement(:)(':')
        FIELD_TYPE
          BASE_TYPE
            SIMPLE_BASE_TYPE
              PsiElement(Identifier)('string')
        DEFINITION_NAME
          PsiElement(Identifier)('string_field')
        XSD_FIELD_OPTIONS
          <empty list>
        LIST_SEPARATOR
          PsiElement(,)(',')
      FIELD
        FIELD_ID
          INT_CONSTANT
            PsiElement(Integer)('2')
          PsiElement(:)(':')
        FIELD_REQ
          PsiElement(Identifier)('optional')
        FIELD_TYPE
          CONTAINER_TYPE
            SET_TYPE
              PsiElement(Identifier)('set')
              GENERIC_TYPE
                PsiElement(<)('<')
                FIELD_TYPE
                  CUSTOM_TYPE
                    PsiElement(Identifier)('Insanity')
                PsiElement(>)('>')
        DEFINITION_NAME
          PsiElement(Identifier)('set_field')
        XSD_FIELD_OPTIONS
          <empty list>
        LIST_SEPARATOR
          PsiElement(,)(',')
      FIELD
        FIELD_ID
          INT_CONSTANT
            PsiElement(Integer)('3')
          PsiElement(:)(':')
        FIELD_REQ
          PsiElement(Identifier)('required')
        FIELD_TYPE
          CONTAINER_TYPE
            LIST_TYPE
              PsiElement(Identifier)('list')
              GENERIC_TYPE
                PsiElement(<)('<')
                FIELD_TYPE
                  CONTAINER_TYPE
                    MAP_TYPE
                      PsiElement(Identifier)('map')
                      GENERIC_TYPE
                        PsiElement(<)('<')
                        FIELD_TYPE
                          CONTAINER_TYPE
                            SET_TYPE
                              PsiElement(Identifier)('set')
                              GENERIC_TYPE
                                PsiElement(<)('<')
                                FIELD_TYPE
                                  BASE_TYPE
                                    SIMPLE_BASE_TYPE
                                      PsiElement(Identifier)('i32')
                                PsiElement(>)('>')
                        PsiElement(,)(',')
                        FIELD_TYPE
                          CONTAINER_TYPE
                            MAP_TYPE
                              PsiElement(Identifier)('map')
                              GENERIC_TYPE
                                PsiElement(<)('<')
                                FIELD_TYPE
                                  BASE_TYPE
                                    SIMPLE_BASE_TYPE
                                      PsiElement(Identifier)('i32')
                                PsiElement(,)(',')
                                FIELD_TYPE
                                  CONTAINER_TYPE
                                    SET_TYPE
                                      PsiElement(Identifier)('set')
                                      GENERIC_TYPE
                                        PsiElement(<)('<')
                                        FIELD_TYPE
                                          CONTAINER_TYPE
                                            LIST_TYPE
                                              PsiElement(Identifier)('list')
                                              GENERIC_TYPE
                                                PsiElement(<)('<')
                                                FIELD_TYPE
                                                  CONTAINER_TYPE
                                                    MAP_TYPE
                                                      PsiElement(Identifier)('map')
                                                      GENERIC_TYPE
                                                        PsiElement(<)('<')
                                                        FIELD_TYPE
                                                          CUSTOM_TYPE
                                                            PsiElement(Identifier)('Insanity')
                                                        PsiElement(,)(',')
                                                        FIELD_TYPE
                                                          BASE_TYPE
                                                            SIMPLE_BASE_TYPE
                                                              PsiElement(Identifier)('string')
                                                        PsiElement(>)('>')
                                                PsiElement(>)('>')
                                        PsiElement(>)('>')
                                PsiElement(>)('>')
                        PsiElement(>)('>')
                PsiElement(>)('>')
        DEFINITION_NAME
          PsiElement(Identifier)('list_field')
        XSD_FIELD_OPTIONS
          <empty list>
        LIST_SEPARATOR
          PsiElement(,)(',')
      FIELD
        FIELD_ID
          INT_CONSTANT
            PsiElement(Integer)('4')
          PsiElement(:)(':')
        FIELD_TYPE
          BASE_TYPE
            SIMPLE_BASE_TYPE
              PsiElement(Identifier)('binary')
        DEFINITION_NAME
          PsiElement(Identifier)('binary_field')
        XSD_FIELD_OPTIONS
          <empty list>
    PsiElement(})('}')
  EXCEPTION
    PsiElement(Identifier)('exception')
    DEFINITION_NAME
      PsiElement(Identifier)('Xception')
    PsiElement({)('{')
    FIELDS
      FIELD
        FIELD_ID
          INT_CONSTANT
            PsiElement(Integer)('1')
          PsiElement(:)(':')
        FIELD_TYPE
          BASE_TYPE
            SIMPLE_BASE_TYPE
              PsiElement(Identifier)('i32')
        DEFINITION_NAME
          PsiElement(Identifier)('errorCode')
        XSD_FIELD_OPTIONS
          <empty list>
        LIST_SEPARATOR
          PsiElement(,)(',')
      FIELD
        FIELD_ID
          INT_CONSTANT
            PsiElement(Integer)('2')
          PsiElement(:)(':')
        FIELD_TYPE
          BASE_TYPE
            SIMPLE_BASE_TYPE
              PsiElement(Identifier)('string')
        DEFINITION_NAME
          PsiElement(Identifier)('message')
        XSD_FIELD_OPTIONS
          <empty list>
    PsiElement(})('}')
  EXCEPTION
    PsiElement(Identifier)('exception')
    DEFINITION_NAME
      PsiElement(Identifier)('Xception2')
    PsiElement({)('{')
    FIELDS
      FIELD
        FIELD_ID
          INT_CONSTANT
            PsiElement(Integer)('1')
          PsiElement(:)(':')
        FIELD_TYPE
          BASE_TYPE
            SIMPLE_BASE_TYPE
              PsiElement(Identifier)('i32')
        DEFINITION_NAME
          PsiElement(Identifier)('errorCode')
        XSD_FIELD_OPTIONS
          <empty list>
        LIST_SEPARATOR
          PsiElement(,)(',')
      FIELD
        FIELD_ID
          INT_CONSTANT
            PsiElement(Integer)('2')
          PsiElement(:)(':')
        FIELD_TYPE
          CUSTOM_TYPE
            PsiElement(Identifier)('Xtruct')
        DEFINITION_NAME
          PsiElement(Identifier)('struct_thing')
        XSD_FIELD_OPTIONS
          <empty list>
    PsiElement(})('}')
  STRUCT
    PsiElement(Identifier)('struct')
    DEFINITION_NAME
      PsiElement(Identifier)('EmptyStruct')
    PsiElement({)('{')
    FIELDS
      <empty list>
    PsiElement(})('}')
  STRUCT
    PsiElement(Identifier)('struct')
    DEFINITION_NAME
      PsiElement(Identifier)('OneField')
    PsiElement({)('{')
    FIELDS
      FIELD
        FIELD_ID
          INT_CONSTANT
            PsiElement(Integer)('1')
          PsiElement(:)(':')
        FIELD_TYPE
          CUSTOM_TYPE
            PsiElement(Identifier)('EmptyStruct')
        DEFINITION_NAME
          PsiElement(Identifier)('field')
        XSD_FIELD_OPTIONS
          <empty list>
    PsiElement(})('}')
  SERVICE
    PsiElement(Identifier)('service')
    DEFINITION_NAME
      PsiElement(Identifier)('ThriftTest')
    PsiElement(Identifier)('extends')
    SERVICE_SUPER_NAME
      CUSTOM_TYPE
        PsiElement(Identifier)('ServiceBase')
    PsiElement({)('{')
    PsiComment(BlockComment)('/**\n   * Prints "testVoid()" and returns nothing.\n   */')
    SERVICE_BODY
      FUNCTION
        FUNCTION_TYPE
          PsiElement(Identifier)('void')
        DEFINITION_NAME
          PsiElement(Identifier)('testVoid')
        PsiElement(()('(')
        PsiElement())(')')
      LIST_SEPARATOR
        PsiElement(,)(',')
      PsiComment(BlockComment)('/**\n   * Prints 'testString("%s")' with thing as '%s'\n   * @param string thing - the string to print\n   * @return string - returns the string 'thing'\n   */')
      FUNCTION
        FUNCTION_TYPE
          FIELD_TYPE
            BASE_TYPE
              SIMPLE_BASE_TYPE
                PsiElement(Identifier)('string')
        DEFINITION_NAME
          PsiElement(Identifier)('testString')
        PsiElement(()('(')
        FIELD
          FIELD_ID
            INT_CONSTANT
              PsiElement(Integer)('1')
            PsiElement(:)(':')
          FIELD_TYPE
            BASE_TYPE
              SIMPLE_BASE_TYPE
                PsiElement(Identifier)('string')
          DEFINITION_NAME
            PsiElement(Identifier)('thing')
          XSD_FIELD_OPTIONS
            <empty list>
        PsiElement())(')')
      LIST_SEPARATOR
        PsiElement(,)(',')
      PsiComment(BlockComment)('/**\n   * Prints 'testByte("%d")' with thing as '%d'\n   * @param byte thing - the byte to print\n   * @return byte - returns the byte 'thing'\n   */')
      FUNCTION
        FUNCTION_TYPE
          FIELD_TYPE
            BASE_TYPE
              SIMPLE_BASE_TYPE
                PsiElement(Identifier)('byte')
        DEFINITION_NAME
          PsiElement(Identifier)('testByte')
        PsiElement(()('(')
        FIELD
          FIELD_ID
            INT_CONSTANT
              PsiElement(Integer)('1')
            PsiElement(:)(':')
          FIELD_TYPE
            BASE_TYPE
              SIMPLE_BASE_TYPE
                PsiElement(Identifier)('byte')
          DEFINITION_NAME
            PsiElement(Identifier)('thing')
          XSD_FIELD_OPTIONS
            <empty list>
        PsiElement())(')')
      LIST_SEPARATOR
        PsiElement(,)(',')
      PsiComment(BlockComment)('/**\n   * Prints 'testI32("%d")' with thing as '%d'\n   * @param i32 thing - the i32 to print\n   * @return i32 - returns the i32 'thing'\n   */')
      FUNCTION
        FUNCTION_TYPE
          FIELD_TYPE
            BASE_TYPE
              SIMPLE_BASE_TYPE
                PsiElement(Identifier)('i32')
        DEFINITION_NAME
          PsiElement(Identifier)('testI32')
        PsiElement(()('(')
        FIELD
          FIELD_ID
            INT_CONSTANT
              PsiElement(Integer)('1')
            PsiElement(:)(':')
          FIELD_TYPE
            BASE_TYPE
              SIMPLE_BASE_TYPE
                PsiElement(Identifier)('i32')
          DEFINITION_NAME
            PsiElement(Identifier)('thing')
          XSD_FIELD_OPTIONS
            <empty list>
        PsiElement())(')')
      LIST_SEPARATOR
        PsiElement(,)(',')
      PsiComment(BlockComment)('/**\n   * Prints 'testI64("%d")' with thing as '%d'\n   * @param i64 thing - the i64 to print\n   * @return i64 - returns the i64 'thing'\n   */')
      FUNCTION
        FUNCTION_TYPE
          FIELD_TYPE
            BASE_TYPE
              SIMPLE_BASE_TYPE
                PsiElement(Identifier)('i64')
        DEFINITION_NAME
          PsiElement(Identifier)('testI64')
        PsiElement(()('(')
        FIELD
          FIELD_ID
            INT_CONSTANT
              PsiElement(Integer)('1')
            PsiElement(:)(':')
          FIELD_TYPE
            BASE_TYPE
              SIMPLE_BASE_TYPE
                PsiElement(Identifier)('i64')
          DEFINITION_NAME
            PsiElement(Identifier)('thing')
          XSD_FIELD_OPTIONS
            <empty list>
        PsiElement())(')')
      LIST_SEPARATOR
        PsiElement(,)(',')
      PsiComment(BlockComment)('/**\n   * Prints 'testDouble("%f")' with thing as '%f'\n   * @param double thing - the double to print\n   * @return double - returns the double 'thing'\n   */')
      FUNCTION
        FUNCTION_TYPE
          FIELD_TYPE
            BASE_TYPE
              SIMPLE_BASE_TYPE
                PsiElement(Identifier)('double')
        DEFINITION_NAME
          PsiElement(Identifier)('testDouble')
        PsiElement(()('(')
        FIELD
          FIELD_ID
            INT_CONSTANT
              PsiElement(Integer)('1')
            PsiElement(:)(':')
          FIELD_TYPE
            BASE_TYPE
              SIMPLE_BASE_TYPE
                PsiElement(Identifier)('double')
          DEFINITION_NAME
            PsiElement(Identifier)('thing')
          XSD_FIELD_OPTIONS
            <empty list>
        PsiElement())(')')
      LIST_SEPARATOR
        PsiElement(,)(',')
      PsiComment(BlockComment)('/**\n   * Prints 'testStruct("{%s}")' where thing has been formatted into a string of comma seperated values\n   * @param Xtruct thing - the Xtruct to print\n   * @return Xtruct - returns the Xtruct 'thing'\n   */')
      FUNCTION
        FUNCTION_TYPE
          FIELD_TYPE
            CUSTOM_TYPE
              PsiElement(Identifier)('Xtruct')
        DEFINITION_NAME
          PsiElement(Identifier)('testStruct')
        PsiElement(()('(')
        FIELD
          FIELD_ID
            INT_CONSTANT
              PsiElement(Integer)('1')
            PsiElement(:)(':')
          FIELD_TYPE
            CUSTOM_TYPE
              PsiElement(Identifier)('Xtruct')
          DEFINITION_NAME
            PsiElement(Identifier)('thing')
          XSD_FIELD_OPTIONS
            <empty list>
        PsiElement())(')')
      LIST_SEPARATOR
        PsiElement(,)(',')
      PsiComment(BlockComment)('/**\n   * Prints 'testNest("{%s}")' where thing has been formatted into a string of the nested struct\n   * @param Xtruct2 thing - the Xtruct2 to print\n   * @return Xtruct2 - returns the Xtruct2 'thing'\n   */')
      FUNCTION
        FUNCTION_TYPE
          FIELD_TYPE
            CUSTOM_TYPE
              PsiElement(Identifier)('Xtruct2')
        DEFINITION_NAME
          PsiElement(Identifier)('testNest')
        PsiElement(()('(')
        FIELD
          FIELD_ID
            INT_CONSTANT
              PsiElement(Integer)('1')
            PsiElement(:)(':')
          FIELD_TYPE
            CUSTOM_TYPE
              PsiElement(Identifier)('Xtruct2')
          DEFINITION_NAME
            PsiElement(Identifier)('thing')
          XSD_FIELD_OPTIONS
            <empty list>
        PsiElement())(')')
      LIST_SEPARATOR
        PsiElement(,)(',')
      PsiComment(BlockComment)('/**\n   * Prints 'testMap("{%s")' where thing has been formatted into a string of  'key => value' pairs\n   *  seperated by commas and new lines\n   * @param map<i32,i32> thing - the map<i32,i32> to print\n   * @return map<i32,i32> - returns the map<i32,i32> 'thing'\n   */')
      FUNCTION
        FUNCTION_TYPE
          FIELD_TYPE
            CONTAINER_TYPE
              MAP_TYPE
                PsiElement(Identifier)('map')
                GENERIC_TYPE
                  PsiElement(<)('<')
                  FIELD_TYPE
                    BASE_TYPE
                      SIMPLE_BASE_TYPE
                        PsiElement(Identifier)('i32')
                  PsiElement(,)(',')
                  FIELD_TYPE
                    BASE_TYPE
                      SIMPLE_BASE_TYPE
                        PsiElement(Identifier)('i32')
                  PsiElement(>)('>')
        DEFINITION_NAME
          PsiElement(Identifier)('testMap')
        PsiElement(()('(')
        FIELD
          FIELD_ID
            INT_CONSTANT
              PsiElement(Integer)('1')
            PsiElement(:)(':')
          FIELD_TYPE
            CONTAINER_TYPE
              MAP_TYPE
                PsiElement(Identifier)('map')
                GENERIC_TYPE
                  PsiElement(<)('<')
                  FIELD_TYPE
                    BASE_TYPE
                      SIMPLE_BASE_TYPE
                        PsiElement(Identifier)('i32')
                  PsiElement(,)(',')
                  FIELD_TYPE
                    BASE_TYPE
                      SIMPLE_BASE_TYPE
                        PsiElement(Identifier)('i32')
                  PsiElement(>)('>')
          DEFINITION_NAME
            PsiElement(Identifier)('thing')
          XSD_FIELD_OPTIONS
            <empty list>
        PsiElement())(')')
      LIST_SEPARATOR
        PsiElement(,)(',')
      PsiComment(BlockComment)('/**\n   * Prints 'testStringMap("{%s}")' where thing has been formatted into a string of  'key => value' pairs\n   *  seperated by commas and new lines\n   * @param map<string,string> thing - the map<string,string> to print\n   * @return map<string,string> - returns the map<string,string> 'thing'\n   */')
      FUNCTION
        FUNCTION_TYPE
          FIELD_TYPE
            CONTAINER_TYPE
              MAP_TYPE
                PsiElement(Identifier)('map')
                GENERIC_TYPE
                  PsiElement(<)('<')
                  FIELD_TYPE
                    BASE_TYPE
                      SIMPLE_BASE_TYPE
                        PsiElement(Identifier)('string')
                  PsiElement(,)(',')
                  FIELD_TYPE
                    BASE_TYPE
                      SIMPLE_BASE_TYPE
                        PsiElement(Identifier)('string')
                  PsiElement(>)('>')
        DEFINITION_NAME
          PsiElement(Identifier)('testStringMap')
        PsiElement(()('(')
        FIELD
          FIELD_ID
            INT_CONSTANT
              PsiElement(Integer)('1')
            PsiElement(:)(':')
          FIELD_TYPE
            CONTAINER_TYPE
              MAP_TYPE
                PsiElement(Identifier)('map')
                GENERIC_TYPE
                  PsiElement(<)('<')
                  FIELD_TYPE
                    BASE_TYPE
                      SIMPLE_BASE_TYPE
                        PsiElement(Identifier)('string')
                  PsiElement(,)(',')
                  FIELD_TYPE
                    BASE_TYPE
                      SIMPLE_BASE_TYPE
                        PsiElement(Identifier)('string')
                  PsiElement(>)('>')
          DEFINITION_NAME
            PsiElement(Identifier)('thing')
          XSD_FIELD_OPTIONS
            <empty list>
        PsiElement())(')')
      LIST_SEPARATOR
        PsiElement(,)(',')
      PsiComment(BlockComment)('/**\n   * Prints 'testSet("{%s}")' where thing has been formatted into a string of  values\n   *  seperated by commas and new lines\n   * @param set<i32> thing - the set<i32> to print\n   * @return set<i32> - returns the set<i32> 'thing'\n   */')
      FUNCTION
        FUNCTION_TYPE
          FIELD_TYPE
            CONTAINER_TYPE
              SET_TYPE
                PsiElement(Identifier)('set')
                GENERIC_TYPE
                  PsiElement(<)('<')
                  FIELD_TYPE
                    BASE_TYPE
                      SIMPLE_BASE_TYPE
                        PsiElement(Identifier)('i32')
                  PsiElement(>)('>')
        DEFINITION_NAME
          PsiElement(Identifier)('testSet')
        PsiElement(()('(')
        FIELD
          FIELD_ID
            INT_CONSTANT
              PsiElement(Integer)('1')
            PsiElement(:)(':')
          FIELD_TYPE
            CONTAINER_TYPE
              SET_TYPE
                PsiElement(Identifier)('set')
                GENERIC_TYPE
                  PsiElement(<)('<')
                  FIELD_TYPE
                    BASE_TYPE
                      SIMPLE_BASE_TYPE
                        PsiElement(Identifier)('i32')
                  PsiElement(>)('>')
          DEFINITION_NAME
            PsiElement(Identifier)('thing')
          XSD_FIELD_OPTIONS
            <empty list>
        PsiElement())(')')
      LIST_SEPARATOR
        PsiElement(,)(',')
      PsiComment(BlockComment)('/**\n   * Prints 'testList("{%s}")' where thing has been formatted into a string of  values\n   *  seperated by commas and new lines\n   * @param list<i32> thing - the list<i32> to print\n   * @return list<i32> - returns the list<i32> 'thing'\n   */')
      FUNCTION
        FUNCTION_TYPE
          FIELD_TYPE
            CONTAINER_TYPE
              LIST_TYPE
                PsiElement(Identifier)('list')
                GENERIC_TYPE
                  PsiElement(<)('<')
                  FIELD_TYPE
                    BASE_TYPE
                      SIMPLE_BASE_TYPE
                        PsiElement(Identifier)('i32')
                  PsiElement(>)('>')
        DEFINITION_NAME
          PsiElement(Identifier)('testList')
        PsiElement(()('(')
        FIELD
          FIELD_ID
            INT_CONSTANT
              PsiElement(Integer)('1')
            PsiElement(:)(':')
          FIELD_TYPE
            CONTAINER_TYPE
              LIST_TYPE
                PsiElement(Identifier)('list')
                GENERIC_TYPE
                  PsiElement(<)('<')
                  FIELD_TYPE
                    BASE_TYPE
                      SIMPLE_BASE_TYPE
                        PsiElement(Identifier)('i32')
                  PsiElement(>)('>')
          DEFINITION_NAME
            PsiElement(Identifier)('thing')
          XSD_FIELD_OPTIONS
            <empty list>
        PsiElement())(')')
      LIST_SEPARATOR
        PsiElement(,)(',')
      PsiComment(BlockComment)('/**\n   * Prints 'testEnum("%d")' where thing has been formatted into it's numeric value\n   * @param Numberz thing - the Numberz to print\n   * @return Numberz - returns the Numberz 'thing'\n   */')
      FUNCTION
        FUNCTION_TYPE
          FIELD_TYPE
            CUSTOM_TYPE
              PsiElement(Identifier)('Numberz')
        DEFINITION_NAME
          PsiElement(Identifier)('testEnum')
        PsiElement(()('(')
        FIELD
          FIELD_ID
            INT_CONSTANT
              PsiElement(Integer)('1')
            PsiElement(:)(':')
          FIELD_TYPE
            CUSTOM_TYPE
              PsiElement(Identifier)('Numberz')
          DEFINITION_NAME
            PsiElement(Identifier)('thing')
          XSD_FIELD_OPTIONS
            <empty list>
        PsiElement())(')')
      LIST_SEPARATOR
        PsiElement(,)(',')
      PsiComment(BlockComment)('/**\n   * Prints 'testTypedef("%d")' with thing as '%d'\n   * @param UserId thing - the UserId to print\n   * @return UserId - returns the UserId 'thing'\n   */')
      FUNCTION
        FUNCTION_TYPE
          FIELD_TYPE
            CUSTOM_TYPE
              PsiElement(Identifier)('UserId')
        DEFINITION_NAME
          PsiElement(Identifier)('testTypedef')
        PsiElement(()('(')
        FIELD
          FIELD_ID
            INT_CONSTANT
              PsiElement(Integer)('1')
            PsiElement(:)(':')
          FIELD_TYPE
            CUSTOM_TYPE
              PsiElement(Identifier)('UserId')
          DEFINITION_NAME
            PsiElement(Identifier)('thing')
          XSD_FIELD_OPTIONS
            <empty list>
        PsiElement())(')')
      LIST_SEPARATOR
        PsiElement(,)(',')
      PsiComment(BlockComment)('/**\n   * Prints 'testMapMap("%d")' with hello as '%d'\n   * @param i32 hello - the i32 to print\n   * @return map<i32,map<i32,i32>> - returns a dictionary with these values:\n   *   {-4 => {-4 => -4, -3 => -3, -2 => -2, -1 => -1, }, 4 => {1 => 1, 2 => 2, 3 => 3, 4 => 4, }, }\n   */')
      FUNCTION
        FUNCTION_TYPE
          FIELD_TYPE
            CONTAINER_TYPE
              MAP_TYPE
                PsiElement(Identifier)('map')
                GENERIC_TYPE
                  PsiElement(<)('<')
                  FIELD_TYPE
                    BASE_TYPE
                      SIMPLE_BASE_TYPE
                        PsiElement(Identifier)('i32')
                  PsiElement(,)(',')
                  FIELD_TYPE
                    CONTAINER_TYPE
                      MAP_TYPE
                        PsiElement(Identifier)('map')
                        GENERIC_TYPE
                          PsiElement(<)('<')
                          FIELD_TYPE
                            BASE_TYPE
                              SIMPLE_BASE_TYPE
                                PsiElement(Identifier)('i32')
                          PsiElement(,)(',')
                          FIELD_TYPE
                            BASE_TYPE
                              SIMPLE_BASE_TYPE
                                PsiElement(Identifier)('i32')
                          PsiElement(>)('>')
                  PsiElement(>)('>')
        DEFINITION_NAME
          PsiElement(Identifier)('testMapMap')
        PsiElement(()('(')
        FIELD
          FIELD_ID
            INT_CONSTANT
              PsiElement(Integer)('1')
            PsiElement(:)(':')
          FIELD_TYPE
            BASE_TYPE
              SIMPLE_BASE_TYPE
                PsiElement(Identifier)('i32')
          DEFINITION_NAME
            PsiElement(Identifier)('hello')
          XSD_FIELD_OPTIONS
            <empty list>
        PsiElement())(')')
      LIST_SEPARATOR
        PsiElement(,)(',')
      PsiComment(BlockComment)('/**\n   * So you think you've got this all worked, out eh?\n   *\n   * Creates a the returned map with these values and prints it out:\n   *   { 1 => { 2 => argument,\n   *            3 => argument,\n   *          },\n   *     2 => { 6 => <empty Insanity struct>, },\n   *   }\n   * @return map<UserId, map<Numberz,Insanity>> - a map with the above values\n   */')
      FUNCTION
        FUNCTION_TYPE
          FIELD_TYPE
            CONTAINER_TYPE
              MAP_TYPE
                PsiElement(Identifier)('map')
                GENERIC_TYPE
                  PsiElement(<)('<')
                  FIELD_TYPE
                    CUSTOM_TYPE
                      PsiElement(Identifier)('UserId')
                  PsiElement(,)(',')
                  FIELD_TYPE
                    CONTAINER_TYPE
                      MAP_TYPE
                        PsiElement(Identifier)('map')
                        GENERIC_TYPE
                          PsiElement(<)('<')
                          FIELD_TYPE
                            CUSTOM_TYPE
                              PsiElement(Identifier)('Numberz')
                          PsiElement(,)(',')
                          FIELD_TYPE
                            CUSTOM_TYPE
                              PsiElement(Identifier)('Insanity')
                          PsiElement(>)('>')
                  PsiElement(>)('>')
        DEFINITION_NAME
          PsiElement(Identifier)('testInsanity')
        PsiElement(()('(')
        FIELD
          FIELD_ID
            INT_CONSTANT
              PsiElement(Integer)('1')
            PsiElement(:)(':')
          FIELD_TYPE
            CUSTOM_TYPE
              PsiElement(Identifier)('Insanity')
          DEFINITION_NAME
            PsiElement(Identifier)('argument')
          XSD_FIELD_OPTIONS
            <empty list>
        PsiElement())(')')
      LIST_SEPARATOR
        PsiElement(,)(',')
      PsiComment(BlockComment)('/**\n   * Prints 'testMulti()'\n   * @param byte arg0 -\n   * @param i32 arg1 -\n   * @param i64 arg2 -\n   * @param map<i16, string> arg3 -\n   * @param Numberz arg4 -\n   * @param UserId arg5 -\n   * @return Xtruct - returns an Xtruct with string_thing = "Hello2, byte_thing = arg0, i32_thing = arg1\n   *    and i64_thing = arg2\n   */')
      FUNCTION
        FUNCTION_TYPE
          FIELD_TYPE
            CUSTOM_TYPE
              PsiElement(Identifier)('Xtruct')
        DEFINITION_NAME
          PsiElement(Identifier)('testMulti')
        PsiElement(()('(')
        FIELD
          FIELD_ID
            INT_CONSTANT
              PsiElement(Integer)('1')
            PsiElement(:)(':')
          FIELD_TYPE
            BASE_TYPE
              SIMPLE_BASE_TYPE
                PsiElement(Identifier)('byte')
          DEFINITION_NAME
            PsiElement(Identifier)('arg0')
          XSD_FIELD_OPTIONS
            <empty list>
          LIST_SEPARATOR
            PsiElement(,)(',')
        FIELD
          FIELD_ID
            INT_CONSTANT
              PsiElement(Integer)('2')
            PsiElement(:)(':')
          FIELD_TYPE
            BASE_TYPE
              SIMPLE_BASE_TYPE
                PsiElement(Identifier)('i32')
          DEFINITION_NAME
            PsiElement(Identifier)('arg1')
          XSD_FIELD_OPTIONS
            <empty list>
          LIST_SEPARATOR
            PsiElement(,)(',')
        FIELD
          FIELD_ID
            INT_CONSTANT
              PsiElement(Integer)('3')
            PsiElement(:)(':')
          FIELD_TYPE
            BASE_TYPE
              SIMPLE_BASE_TYPE
                PsiElement(Identifier)('i64')
          DEFINITION_NAME
            PsiElement(Identifier)('arg2')
          XSD_FIELD_OPTIONS
            <empty list>
          LIST_SEPARATOR
            PsiElement(,)(',')
        FIELD
          FIELD_ID
            INT_CONSTANT
              PsiElement(Integer)('4')
            PsiElement(:)(':')
          FIELD_TYPE
            CONTAINER_TYPE
              MAP_TYPE
                PsiElement(Identifier)('map')
                GENERIC_TYPE
                  PsiElement(<)('<')
                  FIELD_TYPE
                    BASE_TYPE
                      SIMPLE_BASE_TYPE
                        PsiElement(Identifier)('i16')
                  PsiElement(,)(',')
                  FIELD_TYPE
                    BASE_TYPE
                      SIMPLE_BASE_TYPE
                        PsiElement(Identifier)('string')
                  PsiElement(>)('>')
          DEFINITION_NAME
            PsiElement(Identifier)('arg3')
          XSD_FIELD_OPTIONS
            <empty list>
          LIST_SEPARATOR
            PsiElement(,)(',')
        FIELD
          FIELD_ID
            INT_CONSTANT
              PsiElement(Integer)('5')
            PsiElement(:)(':')
          FIELD_TYPE
            CUSTOM_TYPE
              PsiElement(Identifier)('Numberz')
          DEFINITION_NAME
            PsiElement(Identifier)('arg4')
          XSD_FIELD_OPTIONS
            <empty list>
          LIST_SEPARATOR
            PsiElement(,)(',')
        FIELD
          FIELD_ID
            INT_CONSTANT
              PsiElement(Integer)('6')
            PsiElement(:)(':')
          FIELD_TYPE
            CUSTOM_TYPE
              PsiElement(Identifier)('UserId')
          DEFINITION_NAME
            PsiElement(Identifier)('arg5')
          XSD_FIELD_OPTIONS
            <empty list>
        PsiElement())(')')
      LIST_SEPARATOR
        PsiElement(,)(',')
      PsiComment(BlockComment)('/**\n   * Print 'testException(%s)' with arg as '%s'\n   * @param string arg - a string indication what type of exception to throw\n   * if arg == "Xception" throw Xception with errorCode = 1001 and message = arg\n   * elsen if arg == "TException" throw TException\n   * else do not throw anything\n   */')
      FUNCTION
        FUNCTION_TYPE
          PsiElement(Identifier)('void')
        DEFINITION_NAME
          PsiElement(Identifier)('testException')
        PsiElement(()('(')
        FIELD
          FIELD_ID
            INT_CONSTANT
              PsiElement(Integer)('1')
            PsiElement(:)(':')
          FIELD_TYPE
            BASE_TYPE
              SIMPLE_BASE_TYPE
                PsiElement(Identifier)('string')
          DEFINITION_NAME
            PsiElement(Identifier)('arg')
          XSD_FIELD_OPTIONS
            <empty list>
        PsiElement())(')')
        THROWS
          PsiElement(Identifier)('throws')
          PsiElement(()('(')
          FIELD
            FIELD_ID
              INT_CONSTANT
                PsiElement(Integer)('1')
              PsiElement(:)(':')
            FIELD_TYPE
              CUSTOM_TYPE
                PsiElement(Identifier)('Xception')
            DEFINITION_NAME
              PsiElement(Identifier)('err1')
            XSD_FIELD_OPTIONS
              <empty list>
          PsiElement())(')')
      LIST_SEPARATOR
        PsiElement(,)(',')
      PsiComment(BlockComment)('/**\n   * Print 'testMultiException(%s, %s)' with arg0 as '%s' and arg1 as '%s'\n   * @param string arg - a string indication what type of exception to throw\n   * if arg0 == "Xception" throw Xception with errorCode = 1001 and message = "This is an Xception"\n   * elsen if arg0 == "Xception2" throw Xception2 with errorCode = 2002 and message = "This is an Xception2"\n   * else do not throw anything\n   * @return Xtruct - an Xtruct with string_thing = arg1\n   */')
      FUNCTION
        FUNCTION_TYPE
          FIELD_TYPE
            CUSTOM_TYPE
              PsiElement(Identifier)('Xtruct')
        DEFINITION_NAME
          PsiElement(Identifier)('testMultiException')
        PsiElement(()('(')
        FIELD
          FIELD_ID
            INT_CONSTANT
              PsiElement(Integer)('1')
            PsiElement(:)(':')
          FIELD_TYPE
            BASE_TYPE
              SIMPLE_BASE_TYPE
                PsiElement(Identifier)('string')
          DEFINITION_NAME
            PsiElement(Identifier)('arg0')
          XSD_FIELD_OPTIONS
            <empty list>
          LIST_SEPARATOR
            PsiElement(,)(',')
        FIELD
          FIELD_ID
            INT_CONSTANT
              PsiElement(Integer)('2')
            PsiElement(:)(':')
          FIELD_TYPE
            BASE_TYPE
              SIMPLE_BASE_TYPE
                PsiElement(Identifier)('string')
          DEFINITION_NAME
            PsiElement(Identifier)('arg1')
          XSD_FIELD_OPTIONS
            <empty list>
        PsiElement())(')')
        THROWS
          PsiElement(Identifier)('throws')
          PsiElement(()('(')
          FIELD
            FIELD_ID
              INT_CONSTANT
                PsiElement(Integer)('1')
              PsiElement(:)(':')
            FIELD_TYPE
              CUSTOM_TYPE
                PsiElement(Identifier)('Xception')
            DEFINITION_NAME
              PsiElement(Identifier)('err1')
            XSD_FIELD_OPTIONS
              <empty list>
            LIST_SEPARATOR
              PsiElement(,)(',')
          FIELD
            FIELD_ID
              INT_CONSTANT
                PsiElement(Integer)('2')
              PsiElement(:)(':')
            FIELD_TYPE
              CUSTOM_TYPE
                PsiElement(Identifier)('Xception2')
            DEFINITION_NAME
              PsiElement(Identifier)('err2')
            XSD_FIELD_OPTIONS
              <empty list>
          PsiElement())(')')
      PsiComment(BlockComment)('/**\n   * Print 'testOneway(%d): Sleeping...' with secondsToSleep as '%d'\n   * sleep 'secondsToSleep'\n   * Print 'testOneway(%d): done sleeping!' with secondsToSleep as '%d'\n   * @param i32 secondsToSleep - the number of seconds to sleep\n   */')
      FUNCTION
        PsiElement(Identifier)('oneway')
        FUNCTION_TYPE
          PsiElement(Identifier)('void')
        DEFINITION_NAME
          PsiElement(Identifier)('testOneway')
        PsiElement(()('(')
        FIELD
          FIELD_ID
            INT_CONSTANT
              PsiElement(Integer)('1')
            PsiElement(:)(':')
          FIELD_TYPE
            BASE_TYPE
              SIMPLE_BASE_TYPE
                PsiElement(Identifier)('i32')
          DEFINITION_NAME
            PsiElement(Identifier)('secondsToSleep')
          XSD_FIELD_OPTIONS
            <empty list>
        PsiElement())(')')
    PsiElement(})('}')
  SERVICE
    PsiElement(Identifier)('service')
    DEFINITION_NAME
      PsiElement(Identifier)('SecondService')
    PsiElement({)('{')
    SERVICE_BODY
      FUNCTION
        FUNCTION_TYPE
          PsiElement(Identifier)('void')
        DEFINITION_NAME
          PsiElement(Identifier)('blahBlah')
        PsiElement(()('(')
        PsiElement())(')')
      PsiComment(BlockComment)('/**\n   * Prints 'testString("%s")' with thing as '%s'\n   * @param string thing - the string to print\n   * @return string - returns the string 'thing'\n   */')
      FUNCTION
        FUNCTION_TYPE
          FIELD_TYPE
            BASE_TYPE
              SIMPLE_BASE_TYPE
                PsiElement(Identifier)('string')
        DEFINITION_NAME
          PsiElement(Identifier)('secondtestString')
        PsiElement(()('(')
        FIELD
          FIELD_ID
            INT_CONSTANT
              PsiElement(Integer)('1')
            PsiElement(:)(':')
          FIELD_TYPE
            BASE_TYPE
              SIMPLE_BASE_TYPE
                PsiElement(Identifier)('string')
          DEFINITION_NAME
            PsiElement(Identifier)('thing')
          XSD_FIELD_OPTIONS
            <empty list>
        PsiElement())(')')
      LIST_SEPARATOR
        PsiElement(,)(',')
    PsiElement(})('}')
  STRUCT
    PsiElement(Identifier)('struct')
    DEFINITION_NAME
      PsiElement(Identifier)('VersioningTestV1')
    PsiElement({)('{')
    FIELDS
      FIELD
        FIELD_ID
          INT_CONSTANT
            PsiElement(Integer)('1')
          PsiElement(:)(':')
        FIELD_TYPE
          BASE_TYPE
            SIMPLE_BASE_TYPE
              PsiElement(Identifier)('i32')
        DEFINITION_NAME
          PsiElement(Identifier)('begin_in_both')
        XSD_FIELD_OPTIONS
          <empty list>
        LIST_SEPARATOR
          PsiElement(,)(',')
      FIELD
        FIELD_ID
          INT_CONSTANT
            PsiElement(Integer)('3')
          PsiElement(:)(':')
        FIELD_TYPE
          BASE_TYPE
            SIMPLE_BASE_TYPE
              PsiElement(Identifier)('string')
        DEFINITION_NAME
          PsiElement(Identifier)('old_string')
        XSD_FIELD_OPTIONS
          <empty list>
        LIST_SEPARATOR
          PsiElement(,)(',')
      FIELD
        FIELD_ID
          INT_CONSTANT
            PsiElement(Integer)('12')
          PsiElement(:)(':')
        FIELD_TYPE
          BASE_TYPE
            SIMPLE_BASE_TYPE
              PsiElement(Identifier)('i32')
        DEFINITION_NAME
          PsiElement(Identifier)('end_in_both')
        XSD_FIELD_OPTIONS
          <empty list>
    PsiElement(})('}')
  STRUCT
    PsiElement(Identifier)('struct')
    DEFINITION_NAME
      PsiElement(Identifier)('VersioningTestV2')
    PsiElement({)('{')
    FIELDS
      FIELD
        FIELD_ID
          INT_CONSTANT
            PsiElement(Integer)('1')
          PsiElement(:)(':')
        FIELD_TYPE
          BASE_TYPE
            SIMPLE_BASE_TYPE
              PsiElement(Identifier)('i32')
        DEFINITION_NAME
          PsiElement(Identifier)('begin_in_both')
        XSD_FIELD_OPTIONS
          <empty list>
        LIST_SEPARATOR
          PsiElement(,)(',')
      FIELD
        FIELD_ID
          INT_CONSTANT
            PsiElement(Integer)('2')
          PsiElement(:)(':')
        FIELD_TYPE
          BASE_TYPE
            SIMPLE_BASE_TYPE
              PsiElement(Identifier)('i32')
        DEFINITION_NAME
          PsiElement(Identifier)('newint')
        XSD_FIELD_OPTIONS
          <empty list>
        LIST_SEPARATOR
          PsiElement(,)(',')
      FIELD
        FIELD_ID
          INT_CONSTANT
            PsiElement(Integer)('3')
          PsiElement(:)(':')
        FIELD_TYPE
          BASE_TYPE
            SIMPLE_BASE_TYPE
              PsiElement(Identifier)('byte')
        DEFINITION_NAME
          PsiElement(Identifier)('newbyte')
        XSD_FIELD_OPTIONS
          <empty list>
        LIST_SEPARATOR
          PsiElement(,)(',')
      FIELD
        FIELD_ID
          INT_CONSTANT
            PsiElement(Integer)('4')
          PsiElement(:)(':')
        FIELD_TYPE
          BASE_TYPE
            SIMPLE_BASE_TYPE
              PsiElement(Identifier)('i16')
        DEFINITION_NAME
          PsiElement(Identifier)('newshort')
        XSD_FIELD_OPTIONS
          <empty list>
        LIST_SEPARATOR
          PsiElement(,)(',')
      FIELD
        FIELD_ID
          INT_CONSTANT
            PsiElement(Integer)('5')
          PsiElement(:)(':')
        FIELD_TYPE
          BASE_TYPE
            SIMPLE_BASE_TYPE
              PsiElement(Identifier)('i64')
        DEFINITION_NAME
          PsiElement(Identifier)('newlong')
        XSD_FIELD_OPTIONS
          <empty list>
        LIST_SEPARATOR
          PsiElement(,)(',')
      FIELD
        FIELD_ID
          INT_CONSTANT
            PsiElement(Integer)('6')
          PsiElement(:)(':')
        FIELD_TYPE
          BASE_TYPE
            SIMPLE_BASE_TYPE
              PsiElement(Identifier)('double')
        DEFINITION_NAME
          PsiElement(Identifier)('newdouble')
        XSD_FIELD_OPTIONS
          <empty list>
      FIELD
        FIELD_ID
          INT_CONSTANT
            PsiElement(Integer)('7')
          PsiElement(:)(':')
        FIELD_TYPE
          CUSTOM_TYPE
            PsiElement(Identifier)('Bonk')
        DEFINITION_NAME
          PsiElement(Identifier)('newstruct')
        XSD_FIELD_OPTIONS
          <empty list>
        LIST_SEPARATOR
          PsiElement(,)(',')
      FIELD
        FIELD_ID
          INT_CONSTANT
            PsiElement(Integer)('8')
          PsiElement(:)(':')
        FIELD_TYPE
          CONTAINER_TYPE
            LIST_TYPE
              PsiElement(Identifier)('list')
              GENERIC_TYPE
                PsiElement(<)('<')
                FIELD_TYPE
                  BASE_TYPE
                    SIMPLE_BASE_TYPE
                      PsiElement(Identifier)('i32')
                PsiElement(>)('>')
        DEFINITION_NAME
          PsiElement(Identifier)('newlist')
        XSD_FIELD_OPTIONS
          <empty list>
        LIST_SEPARATOR
          PsiElement(,)(',')
      FIELD
        FIELD_ID
          INT_CONSTANT
            PsiElement(Integer)('9')
          PsiElement(:)(':')
        FIELD_TYPE
          CONTAINER_TYPE
            SET_TYPE
              PsiElement(Identifier)('set')
              GENERIC_TYPE
                PsiElement(<)('<')
                FIELD_TYPE
                  BASE_TYPE
                    SIMPLE_BASE_TYPE
                      PsiElement(Identifier)('i32')
                PsiElement(>)('>')
        DEFINITION_NAME
          PsiElement(Identifier)('newset')
        XSD_FIELD_OPTIONS
          <empty list>
        LIST_SEPARATOR
          PsiElement(,)(',')
      FIELD
        FIELD_ID
          INT_CONSTANT
            PsiElement(Integer)('10')
          PsiElement(:)(':')
        FIELD_TYPE
          CONTAINER_TYPE
            MAP_TYPE
              PsiElement(Identifier)('map')
              GENERIC_TYPE
                PsiElement(<)('<')
                FIELD_TYPE
                  BASE_TYPE
                    SIMPLE_BASE_TYPE
                      PsiElement(Identifier)('i32')
                PsiElement(,)(',')
                FIELD_TYPE
                  BASE_TYPE
                    SIMPLE_BASE_TYPE
                      PsiElement(Identifier)('i32')
                PsiElement(>)('>')
        DEFINITION_NAME
          PsiElement(Identifier)('newmap')
        XSD_FIELD_OPTIONS
          <empty list>
        LIST_SEPARATOR
          PsiElement(,)(',')
      FIELD
        FIELD_ID
          INT_CONSTANT
            PsiElement(Integer)('11')
          PsiElement(:)(':')
        FIELD_TYPE
          BASE_TYPE
            SIMPLE_BASE_TYPE
              PsiElement(Identifier)('string')
        DEFINITION_NAME
          PsiElement(Identifier)('newstring')
        XSD_FIELD_OPTIONS
          <empty list>
        LIST_SEPARATOR
          PsiElement(,)(',')
      FIELD
        FIELD_ID
          INT_CONSTANT
            PsiElement(Integer)('12')
          PsiElement(:)(':')
        FIELD_TYPE
          BASE_TYPE
            SIMPLE_BASE_TYPE
              PsiElement(Identifier)('i32')
        DEFINITION_NAME
          PsiElement(Identifier)('end_in_both')
        XSD_FIELD_OPTIONS
          <empty list>
    PsiElement(})('}')
  STRUCT
    PsiElement(Identifier)('struct')
    DEFINITION_NAME
      PsiElement(Identifier)('ListTypeVersioningV1')
    PsiElement({)('{')
    FIELDS
      FIELD
        FIELD_ID
          INT_CONSTANT
            PsiElement(Integer)('1')
          PsiElement(:)(':')
        FIELD_TYPE
          CONTAINER_TYPE
            LIST_TYPE
              PsiElement(Identifier)('list')
              GENERIC_TYPE
                PsiElement(<)('<')
                FIELD_TYPE
                  BASE_TYPE
                    SIMPLE_BASE_TYPE
                      PsiElement(Identifier)('i32')
                PsiElement(>)('>')
        DEFINITION_NAME
          PsiElement(Identifier)('myints')
        XSD_FIELD_OPTIONS
          <empty list>
        LIST_SEPARATOR
          PsiElement(;)(';')
      FIELD
        FIELD_ID
          INT_CONSTANT
            PsiElement(Integer)('2')
          PsiElement(:)(':')
        FIELD_TYPE
          BASE_TYPE
            SIMPLE_BASE_TYPE
              PsiElement(Identifier)('string')
        DEFINITION_NAME
          PsiElement(Identifier)('hello')
        XSD_FIELD_OPTIONS
          <empty list>
        LIST_SEPARATOR
          PsiElement(;)(';')
    PsiElement(})('}')
  STRUCT
    PsiElement(Identifier)('struct')
    DEFINITION_NAME
      PsiElement(Identifier)('ListTypeVersioningV2')
    PsiElement({)('{')
    FIELDS
      FIELD
        FIELD_ID
          INT_CONSTANT
            PsiElement(Integer)('1')
          PsiElement(:)(':')
        FIELD_TYPE
          CONTAINER_TYPE
            LIST_TYPE
              PsiElement(Identifier)('list')
              GENERIC_TYPE
                PsiElement(<)('<')
                FIELD_TYPE
                  BASE_TYPE
                    SIMPLE_BASE_TYPE
                      PsiElement(Identifier)('string')
                PsiElement(>)('>')
        DEFINITION_NAME
          PsiElement(Identifier)('strings')
        XSD_FIELD_OPTIONS
          <empty list>
        LIST_SEPARATOR
          PsiElement(;)(';')
      FIELD
        FIELD_ID
          INT_CONSTANT
            PsiElement(Integer)('2')
          PsiElement(:)(':')
        FIELD_TYPE
          BASE_TYPE
            SIMPLE_BASE_TYPE
              PsiElement(Identifier)('string')
        DEFINITION_NAME
          PsiElement(Identifier)('hello')
        XSD_FIELD_OPTIONS
          <empty list>
        LIST_SEPARATOR
          PsiElement(;)(';')
    PsiElement(})('}')
  STRUCT
    PsiElement(Identifier)('struct')
    DEFINITION_NAME
      PsiElement(Identifier)('GuessProtocolStruct')
    PsiElement({)('{')
    FIELDS
      FIELD
        FIELD_ID
          INT_CONSTANT
            PsiElement(Integer)('7')
          PsiElement(:)(':')
        FIELD_TYPE
          CONTAINER_TYPE
            MAP_TYPE
              PsiElement(Identifier)('map')
              GENERIC_TYPE
                PsiElement(<)('<')
                FIELD_TYPE
                  BASE_TYPE
                    SIMPLE_BASE_TYPE
                      PsiElement(Identifier)('string')
                PsiElement(,)(',')
                FIELD_TYPE
                  BASE_TYPE
                    SIMPLE_BASE_TYPE
                      PsiElement(Identifier)('string')
                PsiElement(>)('>')
        DEFINITION_NAME
          PsiElement(Identifier)('map_field')
        XSD_FIELD_OPTIONS
          <empty list>
        LIST_SEPARATOR
          PsiElement(,)(',')
    PsiElement(})('}')
  STRUCT
    PsiElement(Identifier)('struct')
    DEFINITION_NAME
      PsiElement(Identifier)('LargeDeltas')
    PsiElement({)('{')
    FIELDS
      FIELD
        FIELD_ID
          INT_CONSTANT
            PsiElement(Integer)('1')
          PsiElement(:)(':')
        FIELD_TYPE
          CUSTOM_TYPE
            PsiElement(Identifier)('Bools')
        DEFINITION_NAME
          PsiElement(Identifier)('b1')
        XSD_FIELD_OPTIONS
          <empty list>
        LIST_SEPARATOR
          PsiElement(,)(',')
      FIELD
        FIELD_ID
          INT_CONSTANT
            PsiElement(Integer)('10')
          PsiElement(:)(':')
        FIELD_TYPE
          CUSTOM_TYPE
            PsiElement(Identifier)('Bools')
        DEFINITION_NAME
          PsiElement(Identifier)('b10')
        XSD_FIELD_OPTIONS
          <empty list>
        LIST_SEPARATOR
          PsiElement(,)(',')
      FIELD
        FIELD_ID
          INT_CONSTANT
            PsiElement(Integer)('100')
          PsiElement(:)(':')
        FIELD_TYPE
          CUSTOM_TYPE
            PsiElement(Identifier)('Bools')
        DEFINITION_NAME
          PsiElement(Identifier)('b100')
        XSD_FIELD_OPTIONS
          <empty list>
        LIST_SEPARATOR
          PsiElement(,)(',')
      FIELD
        FIELD_ID
          INT_CONSTANT
            PsiElement(Integer)('500')
          PsiElement(:)(':')
        FIELD_TYPE
          BASE_TYPE
            SIMPLE_BASE_TYPE
              PsiElement(Identifier)('bool')
        DEFINITION_NAME
          PsiElement(Identifier)('check_true')
        XSD_FIELD_OPTIONS
          <empty list>
        LIST_SEPARATOR
          PsiElement(,)(',')
      FIELD
        FIELD_ID
          INT_CONSTANT
            PsiElement(Integer)('1000')
          PsiElement(:)(':')
        FIELD_TYPE
          CUSTOM_TYPE
            PsiElement(Identifier)('Bools')
        DEFINITION_NAME
          PsiElement(Identifier)('b1000')
        XSD_FIELD_OPTIONS
          <empty list>
        LIST_SEPARATOR
          PsiElement(,)(',')
      FIELD
        FIELD_ID
          INT_CONSTANT
            PsiElement(Integer)('1500')
          PsiElement(:)(':')
        FIELD_TYPE
          BASE_TYPE
            SIMPLE_BASE_TYPE
              PsiElement(Identifier)('bool')
        DEFINITION_NAME
          PsiElement(Identifier)('check_false')
        XSD_FIELD_OPTIONS
          <empty list>
        LIST_SEPARATOR
          PsiElement(,)(',')
      FIELD
        FIELD_ID
          INT_CONSTANT
            PsiElement(Integer)('2000')
          PsiElement(:)(':')
        FIELD_TYPE
          CUSTOM_TYPE
            PsiElement(Identifier)('VersioningTestV2')
        DEFINITION_NAME
          PsiElement(Identifier)('vertwo2000')
        XSD_FIELD_OPTIONS
          <empty list>
        LIST_SEPARATOR
          PsiElement(,)(',')
      FIELD
        FIELD_ID
          INT_CONSTANT
            PsiElement(Integer)('2500')
          PsiElement(:)(':')
        FIELD_TYPE
          CONTAINER_TYPE
            SET_TYPE
              PsiElement(Identifier)('set')
              GENERIC_TYPE
                PsiElement(<)('<')
                FIELD_TYPE
                  BASE_TYPE
                    SIMPLE_BASE_TYPE
                      PsiElement(Identifier)('string')
                PsiElement(>)('>')
        DEFINITION_NAME
          PsiElement(Identifier)('a_set2500')
        XSD_FIELD_OPTIONS
          <empty list>
        LIST_SEPARATOR
          PsiElement(,)(',')
      FIELD
        FIELD_ID
          INT_CONSTANT
            PsiElement(Integer)('3000')
          PsiElement(:)(':')
        FIELD_TYPE
          CUSTOM_TYPE
            PsiElement(Identifier)('VersioningTestV2')
        DEFINITION_NAME
          PsiElement(Identifier)('vertwo3000')
        XSD_FIELD_OPTIONS
          <empty list>
        LIST_SEPARATOR
          PsiElement(,)(',')
      FIELD
        FIELD_ID
          INT_CONSTANT
            PsiElement(Integer)('4000')
          PsiElement(:)(':')
        FIELD_TYPE
          CONTAINER_TYPE
            LIST_TYPE
              PsiElement(Identifier)('list')
              GENERIC_TYPE
                PsiElement(<)('<')
                FIELD_TYPE
                  BASE_TYPE
                    SIMPLE_BASE_TYPE
                      PsiElement(Identifier)('i32')
                PsiElement(>)('>')
        DEFINITION_NAME
          PsiElement(Identifier)('big_numbers')
        XSD_FIELD_OPTIONS
          <empty list>
    PsiElement(})('}')
  STRUCT
    PsiElement(Identifier)('struct')
    DEFINITION_NAME
      PsiElement(Identifier)('NestedListsI32x2')
    PsiElement({)('{')
    FIELDS
      FIELD
        FIELD_ID
          INT_CONSTANT
            PsiElement(Integer)('1')
          PsiElement(:)(':')
        FIELD_TYPE
          CONTAINER_TYPE
            LIST_TYPE
              PsiElement(Identifier)('list')
              GENERIC_TYPE
                PsiElement(<)('<')
                FIELD_TYPE
                  CONTAINER_TYPE
                    LIST_TYPE
                      PsiElement(Identifier)('list')
                      GENERIC_TYPE
                        PsiElement(<)('<')
                        FIELD_TYPE
                          BASE_TYPE
                            SIMPLE_BASE_TYPE
                              PsiElement(Identifier)('i32')
                        PsiElement(>)('>')
                PsiElement(>)('>')
        DEFINITION_NAME
          PsiElement(Identifier)('integerlist')
        XSD_FIELD_OPTIONS
          <empty list>
    PsiElement(})('}')
  STRUCT
    PsiElement(Identifier)('struct')
    DEFINITION_NAME
      PsiElement(Identifier)('NestedListsI32x3')
    PsiElement({)('{')
    FIELDS
      FIELD
        FIELD_ID
          INT_CONSTANT
            PsiElement(Integer)('1')
          PsiElement(:)(':')
        FIELD_TYPE
          CONTAINER_TYPE
            LIST_TYPE
              PsiElement(Identifier)('list')
              GENERIC_TYPE
                PsiElement(<)('<')
                FIELD_TYPE
                  CONTAINER_TYPE
                    LIST_TYPE
                      PsiElement(Identifier)('list')
                      GENERIC_TYPE
                        PsiElement(<)('<')
                        FIELD_TYPE
                          CONTAINER_TYPE
                            LIST_TYPE
                              PsiElement(Identifier)('list')
                              GENERIC_TYPE
                                PsiElement(<)('<')
                                FIELD_TYPE
                                  BASE_TYPE
                                    SIMPLE_BASE_TYPE
                                      PsiElement(Identifier)('i32')
                                PsiElement(>)('>')
                        PsiElement(>)('>')
                PsiElement(>)('>')
        DEFINITION_NAME
          PsiElement(Identifier)('integerlist')
        XSD_FIELD_OPTIONS
          <empty list>
    PsiElement(})('}')
  STRUCT
    PsiElement(Identifier)('struct')
    DEFINITION_NAME
      PsiElement(Identifier)('NestedMixedx2')
    PsiElement({)('{')
    FIELDS
      FIELD
        FIELD_ID
          INT_CONSTANT
            PsiElement(Integer)('1')
          PsiElement(:)(':')
        FIELD_TYPE
          CONTAINER_TYPE
            LIST_TYPE
              PsiElement(Identifier)('list')
              GENERIC_TYPE
                PsiElement(<)('<')
                FIELD_TYPE
                  CONTAINER_TYPE
                    SET_TYPE
                      PsiElement(Identifier)('set')
                      GENERIC_TYPE
                        PsiElement(<)('<')
                        FIELD_TYPE
                          BASE_TYPE
                            SIMPLE_BASE_TYPE
                              PsiElement(Identifier)('i32')
                        PsiElement(>)('>')
                PsiElement(>)('>')
        DEFINITION_NAME
          PsiElement(Identifier)('int_set_list')
        XSD_FIELD_OPTIONS
          <empty list>
      FIELD
        FIELD_ID
          INT_CONSTANT
            PsiElement(Integer)('2')
          PsiElement(:)(':')
        FIELD_TYPE
          CONTAINER_TYPE
            MAP_TYPE
              PsiElement(Identifier)('map')
              GENERIC_TYPE
                PsiElement(<)('<')
                FIELD_TYPE
                  BASE_TYPE
                    SIMPLE_BASE_TYPE
                      PsiElement(Identifier)('i32')
                PsiElement(,)(',')
                FIELD_TYPE
                  CONTAINER_TYPE
                    SET_TYPE
                      PsiElement(Identifier)('set')
                      GENERIC_TYPE
                        PsiElement(<)('<')
                        FIELD_TYPE
                          BASE_TYPE
                            SIMPLE_BASE_TYPE
                              PsiElement(Identifier)('string')
                        PsiElement(>)('>')
                PsiElement(>)('>')
        DEFINITION_NAME
          PsiElement(Identifier)('map_int_strset')
        XSD_FIELD_OPTIONS
          <empty list>
      FIELD
        FIELD_ID
          INT_CONSTANT
            PsiElement(Integer)('3')
          PsiElement(:)(':')
        FIELD_TYPE
          CONTAINER_TYPE
            LIST_TYPE
              PsiElement(Identifier)('list')
              GENERIC_TYPE
                PsiElement(<)('<')
                FIELD_TYPE
                  CONTAINER_TYPE
                    MAP_TYPE
                      PsiElement(Identifier)('map')
                      GENERIC_TYPE
                        PsiElement(<)('<')
                        FIELD_TYPE
                          BASE_TYPE
                            SIMPLE_BASE_TYPE
                              PsiElement(Identifier)('i32')
                        PsiElement(,)(',')
                        FIELD_TYPE
                          CONTAINER_TYPE
                            SET_TYPE
                              PsiElement(Identifier)('set')
                              GENERIC_TYPE
                                PsiElement(<)('<')
                                FIELD_TYPE
                                  BASE_TYPE
                                    SIMPLE_BASE_TYPE
                                      PsiElement(Identifier)('string')
                                PsiElement(>)('>')
                        PsiElement(>)('>')
                PsiElement(>)('>')
        DEFINITION_NAME
          PsiElement(Identifier)('map_int_strset_list')
        XSD_FIELD_OPTIONS
          <empty list>
    PsiElement(})('}')
  STRUCT
    PsiElement(Identifier)('struct')
    DEFINITION_NAME
      PsiElement(Identifier)('ListBonks')
    PsiElement({)('{')
    FIELDS
      FIELD
        FIELD_ID
          INT_CONSTANT
            PsiElement(Integer)('1')
          PsiElement(:)(':')
        FIELD_TYPE
          CONTAINER_TYPE
            LIST_TYPE
              PsiElement(Identifier)('list')
              GENERIC_TYPE
                PsiElement(<)('<')
                FIELD_TYPE
                  CUSTOM_TYPE
                    PsiElement(Identifier)('Bonk')
                PsiElement(>)('>')
        DEFINITION_NAME
          PsiElement(Identifier)('bonk')
        XSD_FIELD_OPTIONS
          <empty list>
    PsiElement(})('}')
  STRUCT
    PsiElement(Identifier)('struct')
    DEFINITION_NAME
      PsiElement(Identifier)('NestedListsBonk')
    PsiElement({)('{')
    FIELDS
      FIELD
        FIELD_ID
          INT_CONSTANT
            PsiElement(Integer)('1')
          PsiElement(:)(':')
        FIELD_TYPE
          CONTAINER_TYPE
            LIST_TYPE
              PsiElement(Identifier)('list')
              GENERIC_TYPE
                PsiElement(<)('<')
                FIELD_TYPE
                  CONTAINER_TYPE
                    LIST_TYPE
                      PsiElement(Identifier)('list')
                      GENERIC_TYPE
                        PsiElement(<)('<')
                        FIELD_TYPE
                          CONTAINER_TYPE
                            LIST_TYPE
                              PsiElement(Identifier)('list')
                              GENERIC_TYPE
                                PsiElement(<)('<')
                                FIELD_TYPE
                                  CUSTOM_TYPE
                                    PsiElement(Identifier)('Bonk')
                                PsiElement(>)('>')
                        PsiElement(>)('>')
                PsiElement(>)('>')
        DEFINITION_NAME
          PsiElement(Identifier)('bonk')
        XSD_FIELD_OPTIONS
          <empty list>
    PsiElement(})('}')
  STRUCT
    PsiElement(Identifier)('struct')
    DEFINITION_NAME
      PsiElement(Identifier)('BoolTest')
    PsiElement({)('{')
    FIELDS
      FIELD
        FIELD_ID
          INT_CONSTANT
            PsiElement(Integer)('1')
          PsiElement(:)(':')
        FIELD_REQ
          PsiElement(Identifier)('optional')
        FIELD_TYPE
          BASE_TYPE
            SIMPLE_BASE_TYPE
              PsiElement(Identifier)('bool')
        DEFINITION_NAME
          PsiElement(Identifier)('b')
        PsiElement(=)('=')
        CONST_VALUE
          PsiElement(Identifier)('true')
        XSD_FIELD_OPTIONS
          <empty list>
        LIST_SEPARATOR
          PsiElement(;)(';')
      FIELD
        FIELD_ID
          INT_CONSTANT
            PsiElement(Integer)('2')
          PsiElement(:)(':')
        FIELD_REQ
          PsiElement(Identifier)('optional')
        FIELD_TYPE
          BASE_TYPE
            SIMPLE_BASE_TYPE
              PsiElement(Identifier)('string')
        DEFINITION_NAME
          PsiElement(Identifier)('s')
        PsiElement(=)('=')
        CONST_VALUE
          PsiElement(Literal)('"true"')
        XSD_FIELD_OPTIONS
          <empty list>
        LIST_SEPARATOR
          PsiElement(;)(';')
    PsiElement(})('}')
  STRUCT
    PsiElement(Identifier)('struct')
    DEFINITION_NAME
      PsiElement(Identifier)('StructA')
    PsiElement({)('{')
    FIELDS
      FIELD
        FIELD_ID
          INT_CONSTANT
            PsiElement(Integer)('1')
          PsiElement(:)(':')
        FIELD_REQ
          PsiElement(Identifier)('required')
        FIELD_TYPE
          BASE_TYPE
            SIMPLE_BASE_TYPE
              PsiElement(Identifier)('string')
        DEFINITION_NAME
          PsiElement(Identifier)('s')
        XSD_FIELD_OPTIONS
          <empty list>
        LIST_SEPARATOR
          PsiElement(;)(';')
    PsiElement(})('}')
  STRUCT
    PsiElement(Identifier)('struct')
    DEFINITION_NAME
      PsiElement(Identifier)('StructB')
    PsiElement({)('{')
    FIELDS
      FIELD
        FIELD_ID
          INT_CONSTANT
            PsiElement(Integer)('1')
          PsiElement(:)(':')
        FIELD_REQ
          PsiElement(Identifier)('optional')
        FIELD_TYPE
          CUSTOM_TYPE
            PsiElement(Identifier)('StructA')
        DEFINITION_NAME
          PsiElement(Identifier)('aa')
        XSD_FIELD_OPTIONS
          <empty list>
        LIST_SEPARATOR
          PsiElement(;)(';')
      FIELD
        FIELD_ID
          INT_CONSTANT
            PsiElement(Integer)('2')
          PsiElement(:)(':')
        FIELD_REQ
          PsiElement(Identifier)('required')
        FIELD_TYPE
          CUSTOM_TYPE
            PsiElement(Identifier)('StructA')
        DEFINITION_NAME
          PsiElement(Identifier)('ab')
        XSD_FIELD_OPTIONS
          <empty list>
        LIST_SEPARATOR
          PsiElement(;)(';')
      FIELD
        FIELD_ID
          INT_CONSTANT
            PsiElement(Integer)('3')
          PsiElement(:)(':')
        FIELD_TYPE
          BASE_TYPE
            SIMPLE_BASE_TYPE
              PsiElement(Identifier)('double')
        DEFINITION_NAME
          PsiElement(Identifier)('foo')
        PsiElement(=)('=')
        CONST_VALUE
          DOUBLE_CONSTANT
            PsiElement(-)('-')
            PsiElement(Number)('239.566e3')
        XSD_FIELD_OPTIONS
          <empty list>
        LIST_SEPARATOR
          PsiElement(;)(';')
      FIELD
        FIELD_ID
          INT_CONSTANT
            PsiElement(Integer)('3')
          PsiElement(:)(':')
        FIELD_TYPE
          BASE_TYPE
            SIMPLE_BASE_TYPE
              PsiElement(Identifier)('double')
        DEFINITION_NAME
          PsiElement(Identifier)('foo')
        PsiElement(=)('=')
        CONST_VALUE
          INT_CONSTANT
            PsiElement(Integer)('0x7fff')
        XSD_FIELD_OPTIONS
          <empty list>
        LIST_SEPARATOR
          PsiElement(;)(';')
    PsiElement(})('}')
  STRUCT
    PsiElement(Identifier)('struct')
    DEFINITION_NAME
      PsiElement(Identifier)('TypeAnnotaionExample')
    PsiElement({)('{')
    FIELDS
      FIELD
        FIELD_ID
          INT_CONSTANT
            PsiElement(Integer)('1')
          PsiElement(:)(':')
        FIELD_REQ
          PsiElement(Identifier)('optional')
        FIELD_TYPE
          BASE_TYPE
            SIMPLE_BASE_TYPE
              PsiElement(Identifier)('i32')
        DEFINITION_NAME
          PsiElement(Identifier)('a')
        XSD_FIELD_OPTIONS
          <empty list>
        TYPE_ANNOTATIONS
          PsiElement(()('(')
          TYPE_ANNOTATION_LIST
            TYPE_ANNOTATION
              PsiElement(Identifier)('foo')
              PsiElement(=)('=')
              PsiElement(Literal)('"bar"')
          PsiElement())(')')
    PsiElement(})('}')
    TYPE_ANNOTATIONS
      PsiElement(()('(')
      TYPE_ANNOTATION_LIST
        TYPE_ANNOTATION
          PsiElement(Identifier)('hello')
          PsiElement(=)('=')
          PsiElement(Literal)('"world"')
      PsiElement())(')')
  STRUCT
    PsiElement(Identifier)('struct')
    DEFINITION_NAME
      PsiElement(Identifier)('StructA')
    PsiElement({)('{')
    FIELDS
      FIELD
        FIELD_ID
          INT_CONSTANT
            PsiElement(Integer)('1')
          PsiElement(:)(':')
        FIELD_TYPE
          BASE_TYPE
            SIMPLE_BASE_TYPE
              PsiElement(Identifier)('i32')
        DEFINITION_NAME
          PsiElement(Identifier)('x')
        PsiElement(=)('=')
        CONST_VALUE
          INT_CONSTANT
            PsiElement(Integer)('0')
        XSD_FIELD_OPTIONS
          <empty list>
    PsiElement(})('}')
  TYPEDEF
    PsiElement(Identifier)('typedef')
    FIELD_TYPE
      CUSTOM_TYPE
        PsiElement(Identifier)('StructA')
    DEFINITION_NAME
      PsiElement(Identifier)('StructB')
  CONST
    PsiElement(Identifier)('const')
    FIELD_TYPE
      CONTAINER_TYPE
        MAP_TYPE
          PsiElement(Identifier)('map')
          GENERIC_TYPE
            PsiElement(<)('<')
            FIELD_TYPE
              BASE_TYPE
                SIMPLE_BASE_TYPE
                  PsiElement(Identifier)('string')
            PsiElement(,)(',')
            FIELD_TYPE
              BASE_TYPE
                SIMPLE_BASE_TYPE
                  PsiElement(Identifier)('i32')
            PsiElement(>)('>')
    DEFINITION_NAME
      PsiElement(Identifier)('GEN_MAP2')
    PsiElement(=)('=')
    CONST_VALUE
      CONST_MAP
        PsiElement({)('{')
        CONST_VALUE
          PsiElement(Literal)('"hello"')
        PsiElement(:)(':')
        CONST_VALUE
          INT_CONSTANT
            PsiElement(Integer)('233')
        LIST_SEPARATOR
          PsiElement(,)(',')
        CONST_VALUE
          PsiElement(Literal)('"lkj98d"')
        PsiElement(:)(':')
        CONST_VALUE
          INT_CONSTANT
            PsiElement(Integer)('853')
        LIST_SEPARATOR
          PsiElement(,)(',')
        CONST_VALUE
          PsiElement(Literal)(''lkjsdf'')
        PsiElement(:)(':')
        CONST_VALUE
          INT_CONSTANT
            PsiElement(Integer)('098325')
        PsiElement(})('}')
  TYPEDEF
    PsiElement(Identifier)('typedef')
    FIELD_TYPE
      BASE_TYPE
        SIMPLE_BASE_TYPE
          PsiElement(Identifier)('i32')
        TYPE_ANNOTATIONS
          PsiElement(()('(')
          TYPE_ANNOTATION_LIST
            TYPE_ANNOTATION
              PsiElement(Identifier)('annotation_before')
              PsiElement(=)('=')
              PsiElement(Literal)('"true"')
          PsiElement())(')')
    DEFINITION_NAME
      PsiElement(Identifier)('demo')